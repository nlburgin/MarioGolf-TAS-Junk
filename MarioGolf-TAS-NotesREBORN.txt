NOTES

Welcome to my first ever complete TAS, which is of the N64 game Mario Golf. I like watching TASes, and I like playing Mario Golf, so I decided to put the two together.

__________________________________________
GOALS: 

1) Fully complete Tournament Mode. This entails:
  * Get all six trophies
  * Get all 108 Birdie Badges
---
2) Do not start from SRAM (this is not a NG+ run) and do not input the "unlock almost everything" secret code on the title screen. Work only with what the game gives you at the start, even if that means being stuck with Baby Mario for the first three courses.

I know that the use of in-game cheat codes, or of SRAMs validated by an "unlocking run", is sometimes allowed for these types of games. My rationale for selecting a goal choice that expressly forbids this is that using Metal Mario all the time would allow for a lot more Par 4s (especially early on) to be Hole-in-One'd instead of just Eagle'd if you manipulate for a sufficient tailwind. While theoretically this should be a more impressive result, in practice the movie would get monotonous pretty quickly as this essentially bypasses all of the hole's actual terrain instead of actually having to play through it. Having to deal with the actual starting roster that the game normally gives you (and by extension, having to deal with the actual terrain separating the tee from the green on most Par 4's) makes for much more interesting gameplay in my opinion.

I don't know if this means my movie needs to be tagged as "uses a sub-optimal character" or not. I'm pretty sure the character choice is optimal within the bounds of a run that proceeds normally from first power-on without using an unlock code or dirty SRAM.
---
3) To the extent allowed by Goal #2, use the minimum possible number of strokes, and achieve the lowest possible score for each course. All par 3's must be a Hole-in-One. All par 5's must be an Albatross (double eagle). All par 4's must be either an Eagle or a Hole-In-One depending on whether the best available character can reach the pin in one stroke with an ideal tailwind.

In most cases this third goal won't conflict with the general implied goal of being as fast/optimal as possible. However, in the event that luck-manipulation for viable weather takes longer than simply using an extra stroke, minimizing stroke count will be prioritized over minimizing frame count.

____________________________________________________________________
STRATEGY: 

There are ten factors affecting a shot.

* Shot meter: Press A once to start it. Distance is determined by how far to the right the marker gets on the second press. Third press is for accuracy. If it goes outside the red zone it's a total misfire, otherwise you can use it to hit the ball off-center to make it go left or right.

* Club: Affects distance and height. Longer clubs also make the red zone on the shot meter narrower.

You can change one club up or down "for free" on the same frame as you start the shot meter, any further club changes cost 4 frames. Well, sometimes it's possible to use only 2 frames per club by alternating between the analog stick and the D-Pad, but this doesn't seem to always work. When it does work, it usually seems to preclude from aiming in surrounding frames. This behavior is strangely inconsistent and I think it may be related to lag.

* Strike zone: Determines exactly where on the ball the club head strikes. Is controlled by the position of the analog stick during the 3rd A press of the shot meter. Affects trajectory and is highly important for controlling precise ball placement. When we can, we usually aim somewhere around the top of the ball, as this lowers the trajectory, reducing hangtime and making the ball get where it's going quicker. However, aiming too high tends to make it roll or bounce too much, so a balance needs to be struck.

* Aim: Aiming to the left or right. 

You can get one frame's worth "for free" without losing time by tilting the analog stick on the same frame you start the shot meter. It seems like you can sometimes also get an additional "free" frame of aiming immediately BEFORE it becomes possible to change clubs and/or start the shot meter, but this only ever happens when teeing off and seems to not always happen (may be related to lag frames?)

Aiming further than 1-2 frames worth takes time, but that time can be repaid tenfold if gets you closer to the hole, as is often the case if the default aim wants to take a detour. It can be done while changing clubs, too.

In addition to the obvious uses of aiming, often we need to use a couple extra frames of aiming as a source of entropy. Slight variations to the analog stick input while aiming allows for many more possible trajectories when searching for one that will actually go IN the hole instead of just being another near-miss, since the strike zone by itself isn't always precise enough -- the analog stick actually has finite resolution.

* Power shot: Boosts both distance and height without changing club. Contrasts with a club change as boosting distance that way will usually *lower* height.

Can be done "for free" on the same frame you start the shot meter. You only get six per round, but you can avoid decrementing the counter with a perfect "nice shot". We still expend quite a few because "perfect" shots don't always cooperate with the desired ball placement.

* Weather: Wind and rain. Wind affects distance and trajectory in fairly intuitive ways, in proportion to its speed (ranges from 0-21). Rain reduces distance and lowers trajectory, and also reduces the speed the ball rolls along the ground. Both are controlled by the RNG and we can luck-manipulate them when necessary.

The uses of the weather are both obvious and non-obvious. For example, it's obvious that a tailwind helps get more distance, and that a crosswind sometimes helps expedite aiming but is usually a nuisance that requires counter-aim to compensate.

Less obvious is that a *headwind*, which is normally considered undesirable in typical play, can help get a vertical-drop trajectory that allows the ball to enter the hole directly from the air without touching the ground or the flag.

* Terrain: Fairway, rough, deep rough, semi rough, bunker (sand trap), green edge, green, rock, waste area(desert). The ball reacts differently when striking each of these. "Bad" terrains, with the exception of rock, bring the ball to an almost instant stop, so if the next shot can still be holed from them it's often better to aim for them from the tee, unless they're too far out of the way.

* Lie: Where you hit the ball from. Affects distance and the accuracy portion of the shot meter, with the exact effect depending on the club. Irons are much more tolerant of bad lies than woods. 

Lies can also be slanted, which can wildly affect trajectory and the behavior of the strike zone.

There can be different lies on the same terrain type. For example, the fairway has three-- a perfect lie, an imperfect lie, and a "divot" lie which is actually worse than the semi rough. I'm not sure how it decides which one to use. I can usually manipulate them by making very slight changes to aim or strike zone, but if it's random it must be using a different type of RNG than the weather does, because stalling frames has no effect. 

Bunkers also have two lies, one where the ball is buried in the sand and one where it sits on top. This appears to be determined by the trajectory of the inbound ball.

* The Pin: Sticks up out of the center of the hole when you're not putting on the green (which we don't do). It can stop a ball that would otherwise just barely have too much force to go in the hole and would otherwise skip over. 

This has it's limits, though; too much speed and the ball will bounce off without going in. A monkey will appear and the announcer will say something about a "Pin Shot".

Unless you hit the special "Flag Shot" hitbox at the very top of the pole, which will always drop the ball either in the hole or right next to it (in our case, always into it) regardless of how fast it comes in. This comes at the cost of a few frames of delay compared to just plunking it right into the hole, but if the ball gets to the hole a lot faster to begin with it can be worth it.

In terms of a ball that's already touched the ground, a shot hitting the pin can also sometimes go in if the ball is still bouncing along the ground, when it would certainly have bounced off it was strictly *rolling* on the ground at that speed. This isn't perfectly reliable though; I think it depends on whether the ball is in the rising or falling phase of its bounce trajectory. We exploit this on 1-1, 4-2, 4-7, and 2-17.

Dropping the ball directly into the hole without touching the ground *or* the flag can also be efficient, but to prevent it from just ending up as a Pin Shot, this usually requires a trajectory that pretty much drops the ball in the hole vertically such that it has lost nearly all of its non-vertical momentum by the time it reaches the hole. I've found that if it doesn't prevent you from reaching the hole in two shots to begin with, a headwind can be very useful for braking the ball to get a vertical drop trajectory.

* Hole placement: AKA pin position. The exact spot on the green where the hole is. It can vary, but I wasn't able to manipulate it using the same method as the weather. Future runs would do well to research whether the game actually uses multiple RNGs, or if it prerolls all pin positions at the start of the round, or whatever else it is that causes the pin position to be unresponsive to the frame-stalling method that allows weather manipulation.

It should be noted that in Training mode, where you select specific holes to play one at a time, the pin position is re-rolled every time you reload the hole. But frame-stalling for weather in Tournament mode does not seem to affect it at all.

* Character: Affects a variety of things. Most obviously, some characters have longer shot range. Characters with longer range tend to have narrower accuracy redzones in their shot meter. 

Characters are also divided into Draw, Fade, or Straight. Straight is exactly what it says: they hit the ball dead straight before accounting for wind or strike zone, and the effects of the strike zone are pretty subtle as well. Draw means the ball flies in a right-to-left-to-right arc which is affected pretty substantially by the strike zone. It also hits higher into the air than other shot types. Fade hits in a left-to-right-to-left arc, but isn't simply a horizontal inversion of the draw because it has different characteristics such as its lower height. However, both draws and fades can be horizontally inverted by setting the character as "Lefty" (left-handed) in the character select screen.

Draws and Fades tend to get more intense as the shot range goes up, as well. Due to rule 2 of our goal choice, our character selection is fairly limited. We don't use any Fade characters, and the only Draw character we use has the mildest draw in the game, which is nonetheless still noticeable when using Wood clubs.

-------

Characters used:

* Baby Mario -- is adorable.

Also, he is not only the hardest hitting of the four starting characters (by a small margin), but he also has the highest shot trajectory (by a substantial margin), which makes it easier for him to exploit tailwinds and get over obstacles. However by striking the top of the ball he can still keep it fairly low when the extra hangtime would only slow things down.

Plum was also considered, as her celebration animation is about 8-9 frames (I measured 9, but an odd number like that seems impossible when the game normally skips every other frame, so either I measured wrong or there was an extra lag frame in there somewhere) shorter than Baby's, so that would save about 8-9 frames every hole. Plum is the only one of the starting four with a shorter celebration animation than Baby; Charlie was about the same and Peach was considerably longer.

However, in the end Baby was really the only choice for minimizing strokes, since there were some Albatrosses that were only *barely* possible for Baby, and wouldn't be possible at all for the others. Although his drive distance according to the character select screen is theoretically only 3 yards longer than Peach's, his higher trajectory means he gets more benefit from tailwinds, so the actual difference in max distance is considerably higher.

* Maple -- is tops. A spunky gal that Camelot invented to pad out the roster, because apparently they hadn't heard of Princess Daisy.

She is used simply because she hits a great deal harder than the other characters that we have available without going far out of our way to get them --most of them require playing an entire round against an AI opponent, but she unlocks by collecting 50 or more Birdie Badges, which we will naturally have after finishing 3 courses. She may not be Metal Mario, but a 30 yard distance improvement over the Baby is still nothing to sneeze at. Now that we don't have to send a tiny baby to do a grown woman's job, we can get some -3's that the baby wouldn't have been able to manage.

-----
Route Planning:

Since we actually have to unlock them the normal way, you'd think we'd have no choice but to do the courses in order, right?  Wrong. We get so many course points in Toad Highlands that we unlock both Koopa Park and Shy Guy Desert. This means we get to choose where to go next. And I choose to save Koopa Park for Maple, since she can't actually save any strokes in Yoshi's Island, but *can* save one in Koopa Park. This way may be slower in terms of frames, due to the much heavier luck manipulation that Baby will need to get through Yoshi's Island. But as stated in Goal #2 earlier, saving a stroke takes precedence.

So our course order is

1) Toad Highlands
2) Shy Guy Desert
3) Yoshi's Island
4) Koopa Park
5) Boo Valley
6) Mario's Star

On a smaller scale, route planning also includes how you aim the tee shots on non Hole-in-Ones. My strategy was:

1) Straighter is better. Aim directly at the hole if reasonably possible.
2) Higher is better. Always take the high ground unless it significantly conflicts with point (1) or otherwise causes some sort of distinct inconvenience
3) Be wary of fairways, as the ball tends to waste time rolling and bouncing when it lands there. Avoid using it if you can still hit it in from the rough. If you can't avoid hitting from the fairway, still try to use nearby rough or semi-rough to brake the ball so it doesn't roll so much.

----

Resource Management: The only expendable resource you have is power shots, and they can be retained if you hit the furthest distance and center accuracy marker for a "Nice Shot". Not doing this can be worth it if it makes the ball land exactly where and how you want, but it's sort of important to weigh whether it's worth it to lose one for this shot, since you only have six.
_________________________________________________________________________________________
TECHNICAL:

One odd thing I'll say right off the bat is the game seems to only accept input (and refresh the screen) every other frame (i.e. it's effectively 30fps). However whether it's odd frames or even frames tends to vary; I assume this is based on additional lag frames throwing it off.

----
Luck Manipulation: Is fairly easy as we seem to be under a simple frame-based RNG. Is used to control weather.

One strange thing though, it seems that the RNG is paused in the menu screens. To manipulate for the first hole, my only option was to delay skipping the opening cutscene. Once the title screen came up, stalling out frames would no longer appear to affect the RNG until I actually started playing golf. The same goes for the leaderboard screen; to manipulate the next hole you need to stall before finishing the previous one.

---
Tools Used: I mainly used TAStudio and lua botting. My scripts mainly botted by programatically changing values in TASTudio's timeline and then letting it run until a specified frame.

* The first bot I wrote is brute-force search for a shot that will go in the hole (creating permutations of aim and strike zone position within a given range) which initially failed to be useful. It was initially designed to wait a while so that the next hole could begin if the ball did go in, and then checked the result by read the byte value at x106231, which is Player 1's score as used by the HUD. This took insanely long and was useless. I'm not sure what I was thinking. After running it for almost two days and it doing nothing besides inflating my rerecord count, I gave up on it and went back to lining up shots manually. I eventually gave up on that playthrough due to dissatisfaction with the optimization level, however when I restarted about a year later I discovered a new memory location, 0x250B27, a Boolean value measuring whether or not the ball is going into the hole. Notably it's actually set right as your character starts to swing the club, long before the ball is actually _shown_ to go into the hole. While using this didn't change the theoretical time complexity (which is probably like O(n^3) or somethingl like that), it still made it at least a thousand times more efficient. At that point it was still not very useful, but after adding a feature to permute _two_ aim values (an aim and a reverse counter-aim, exploiting weird subleties in the analog aiming control), it becomes _very_ effective at tightly searching the vicinity of a manually found near-miss. When I first tested this version on Toad Highlands 2 of the final run, I was shocked to find that it found not one, but __24__ solutions. At that point I felt obligated to test them all to see which is fastest, even if by only a few frames. To somewhat automate this, I wrote an adjunct script that screenshots around the time that the leaderboard should appear, and uses its progress as a measuring stick.

* The second bot I wrote was a luck manipulation bot meant to re-roll the weather and check the next hole's windspeed, and reported the byte values at x0F6F56 and x0F6F57. These values are ASCII characters used in the HUD's wind display, though oddly the pause menu needs to be up for them to be read reliably from memory.

* I third script I wrote (which I'm not sure even qualifies as a bot, since it just operates directly on the TAStudio input list without any frame advance loop) was a silly thing to make the strike zone move in a set pattern on frames where it doesn't do anything important (it only counts on the frame where you press A the third time, otherwise it just makes the indicator on the ball in the corner of the screen move). I switch to a new pattern every nine holes. This is solely aesthetic, and because it doesn't add or remove frames but just puts in some filler input while the shot meter is moving, it can be retroactively applied to already-complete holes without desyncing later ones.

_____________________________________________
HOLE-BY-HOLE COMMENTARY:

___________Toad Highlands___________________

1-1: That "Longest Drive" indicator shows up automatically the first time you land on the fairway.

It also shows up again if you hit a longer drive onto the fairway afterwards, but we're able to avoid that. It can actually be set by a hole in one, so we take the fairway (often a slower route due to rolling) just so that it doesn't get set to a low value (sure to be beaten later) on hole 2.

1-2: This hole motivated me to give up and eventually restart because I felt like I optimized it _very_ poorly the first time around. For my finished run, armed with my newly-efficient brute force search, for the first time I found myself in the position of having more known solutions for holing the ball than I knew what to do with! I had to test them all to see which one was fastest.

1-3: What, did you think we'd be using the fairway? When it's so far off to the right of the hole? This Baby is an all-terrain vehicle, we don't need no stinkin' fairway!

In my final playthrough, my bot found over a hundred solutions for this hole, and I had to write a script to sift through the screenshots. In this case it was not a Lua script for Bizhawk, but a Bash script that uses ImageMagick to convert the screenshots to raw RGB data, which is then piped into a small custom C program that counts the number of white pixels. The more of the leaderboard is exposed, the more white pixels there will be, so this is a good measuring stick of which solution gets to the leaderboard screen first.

1-4: Ooh, nice Albatross! Surprisingly, it's possible for Baby to Albatross all par 5's in the first four courses, which are the only ones we need him to. This is actually the hardest one in Toad Highlands because it's uphill, but of course we make it look easy.

Unless you can overshoot enough to get a Flag Shot (hitbox at the very top of the flagpole), which doesn't seem to be possible here, your ball can't be going too fast when it reaches the green or even if you line it up perfectly it'll just bounce off the pin. However this can sometimes be avoided if the ball bounces _just right_.

1-5 The final route through this hole saved 60 frames over an older branch that used a flag-shot, despite using a slower bounce-in hole approach. I think this is because of the time saved by the lower trajectory of not using a power shot off the tee. Also I think the slanted lie where the ball landed caused the second shot to also have a lower,faster trajectory than it would have otherwise.

1-6 Go directly to the hole. Do not touch the ground, do not collect $200.

1-7 Plop.

1-8 Another Albatross. It was taking too many frames to luck manipulate, but fortunately I found out that stalling before the _first_ shot of the previous hole gives different results than after the _second_ shot like I usually do. While frames do matter, this seemingly isn't _purely_ a simple frame-based RNG. Beyond this, I'm not really sure of the full specifics of how it works.

This was also where I learned that the number of frames between completing the input for the shot meter, and the game determining whether or not the ball will go into the hole, is variable. My bot was failing to detect solutions that existed because it was only waiting 10 frames before checking 0x250B27  (which it got away with in previous holes). It only worked when I increased that number.
